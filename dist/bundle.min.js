(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
window.responsiveTable = require('./main');

},{"./main":5}],2:[function(require,module,exports){
var fitHeight = require('./fitHeight');

module.exports = function (responsiveTable) {
    var nextButton = responsiveTable.querySelectorAll('.js-next')[0];
    nextButton.onclick = function() {
        var elements = responsiveTable.querySelectorAll('.vr-tr__contentCol');
        var activeElements = responsiveTable.querySelectorAll('.vr-tr__contentCol._active');
        var isLast = elements[elements.length - 1].classList.contains('_active');
        var indexLastActiveElement = 0;
        for (var i = 0; i < elements.length; i += 1) {
            if (elements[i].classList.contains('_active')) {
                indexLastActiveElement = i;
            }
        }

        var newElIndex = indexLastActiveElement + 1;

        if (!isLast) {
            var classes = activeElements[0].classList;
            classes.remove('_active');
            for (var i = 0; i < elements.length; i += 1) {
                elements[i].classList.remove('_last');
            }
            var elems = elements[newElIndex].classList;
            elems.add('_active');
            elems.add('_last');
        }
        fitHeight(responsiveTable);
    };

    var prevButton = responsiveTable.querySelectorAll('.js-prev')[0];

    prevButton.onclick = function() {
        var elements = responsiveTable.querySelectorAll('.vr-tr__contentCol');
        var activeElements = responsiveTable.querySelectorAll('.vr-tr__contentCol._active');

        var isFirst = elements[0].classList.contains('_active');
        var indexFirstActiveElement = 0;
        for (var i = 0; i < elements.length; i += 1) {
            if (elements[i].classList.contains('_active') && !indexFirstActiveElement) {
                indexFirstActiveElement = i;
            }
        }
        var newElIndex = indexFirstActiveElement - 1;

        if (!isFirst) {
            var classes = activeElements[activeElements.length - 1].classList;
            classes.remove('_active');
            for (var i = 0; i < elements.length; i += 1) {
                elements[i].classList.remove('_last');
            }
            var elems = elements[newElIndex].classList;
            elems.add('_active');
            activeElements[activeElements.length - 2].classList.add('_last');
        }
        fitHeight(responsiveTable);
    };
};
},{"./fitHeight":3}],3:[function(require,module,exports){
module.exports = function (responsiveTable) {
    var maxHeight = 0;
    var cells = responsiveTable.querySelectorAll('.vr-tr__cell');
    var cellsLen = cells.length;
    for (var i = 0; i < cellsLen; i += 1) {
        cells[i].style.height = '';
        var elHeight = cells[i].offsetHeight;
        if (elHeight > maxHeight) {
            maxHeight = elHeight;
        }
    }

    for (var i = 0; i < cellsLen; i += 1) {
        cells[i].style.height = maxHeight + 'px';
    }

    var tableHeight = responsiveTable.querySelectorAll('.vr-tr__contentTable')[0].offsetHeight;

    responsiveTable.querySelectorAll('.vr-tr')[0].style.height = tableHeight + 'px';
};
},{}],4:[function(require,module,exports){
var fitHeight = require('./fitHeight');

module.exports = {
    insertAfter: function (referenceNode, newNode) {
        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
    },
    isIE: (function() {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf('MSIE ');
        return msie > 0;
    })(),
    getRowAmount: function(params) {
        var windowWidth = window.innerWidth;
        var rowAmount = 3;
        for (var i = 0; i < params.amount.length; i += 1) {
            if (windowWidth >= params.amount[i][0] && windowWidth < params.amount[i][1]) {
                rowAmount = i + 1;
                break;
            }
        }
        return rowAmount;
    },
    addClasses: function(responsiveTable, rowAmount) {
        var cols = responsiveTable.querySelectorAll('.vr-tr__contentCol');
        var classes = cols[0].classList;
        classes.remove('_active');
        classes.remove('_last');

        var colsLen = cols.length;
        for (var i = 0; i < colsLen; i += 1) {
            cols[i].classList.remove('_active');
            cols[i].classList.remove('_last');

            if (i < rowAmount) {
                cols[i].classList.add('_active');
            }
            if (i == rowAmount - 1) {
                cols[i].classList.add('_last');
            }
        }
    },
    activateCol: function(originTable, responsiveTable, params) {
        var self = this;
        var rowAmount = this.getRowAmount(params);
        this.addClasses(responsiveTable, rowAmount);
        this.showTable(originTable, responsiveTable, params);


        window.onresize = function() {
            var newRowAmount = self.getRowAmount(params);
            if (newRowAmount != rowAmount) {
                rowAmount = newRowAmount;
                self.addClasses(responsiveTable, rowAmount);
            }
            fitHeight(responsiveTable);
            self.showTable(originTable, responsiveTable, params);
        };
    },
    showTable: function(originTable, responsiveTable, params) {
        if (window.innerWidth > params.maxWidth) {
            originTable.style.display = '';
            responsiveTable.style.display = 'none';
        } else {
            originTable.style.display = 'none';
            responsiveTable.style.display = '';
        }
    }
};
},{"./fitHeight":3}],5:[function(require,module,exports){
var eventListeners = require('./eventListeners');
var fitHeight = require('./fitHeight');
var helpers = require('./helpers');
var templater = require('./templater')();

module.exports = (function() {
    var module = {};

    function responsiveTableInstance(initParams) {
        var params;
        var originTable;
        var responsiveTable;

        params = initParams || {};

        params.amount = params.amount || [
            [0, 480], // 1
            [481, 568], // 2
            [569, 768] // 3
        ];

        params.maxWidth = params.maxWidth || 768;

        params.query = params.query || 'table';

        originTable = document.querySelectorAll(params.query);

        if (originTable.length) {
            originTable = originTable[0];
            var template = templater.template(originTable);
            responsiveTable = document.createElement('div');
            responsiveTable.innerHTML = template;

            helpers.insertAfter(originTable, responsiveTable);

            helpers.activateCol(originTable, responsiveTable, params);

            fitHeight(responsiveTable);
            eventListeners(responsiveTable);
        }
    }

    module.init = function(initParams) {
        if (!helpers.isIE) {
            new responsiveTableInstance(initParams);
        }
    };

    return module;
})();
},{"./eventListeners":2,"./fitHeight":3,"./helpers":4,"./templater":6}],6:[function(require,module,exports){
module.exports = function () {
    var module = {};

    function giveHeaderTemplate(table) {
        var html = '<div class="vr-tr__headers">';
        var head = table.getElementsByTagName('thead');
        var thList = head[0].getElementsByTagName('th');
        for (var i = 0; i < thList.length; i++) {
            html += '<div class="vr-tr__cell">' +
                        '<span class="vr-tr__headersText">' +
                            thList[i].innerHTML +
                        '</span>' +
                    '</div>';
        }
        html += '</div>';
        return html;
    }

    function giveContentTemplate(table) {
        var html = '<div class="vr-tr__content"><table class="vr-tr__contentTable"><tr>';
        var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        var len = rows.length;
        for (var i = 0; i < len; i += 1) {
            html += '<td class="vr-tr__contentCol">';
            var cells = rows[i].getElementsByTagName('td');
            var cellsLen = cells.length;

            for (var j = 0; j < cellsLen; j += 1) {
                html += '<div class="vr-tr__cell">' + cells[j].innerHTML + '</div>';
            }
            html += '</td>';
        }
        html += '</tr></table></div>';
        return html;
    }

    function giveButtonsTemplate() {
        return '<div class="vr-tr__buttons"> ' +
                   '<div class="vr-tr__button _next js-next"></div>' +
                   '<div class="vr-tr__button _prev js-prev"></div>' +
               '</div>';

    }

    module.template = function template(table) {
        var html = '<div class="vr-tr">';
        html += giveHeaderTemplate(table);
        html += giveContentTemplate(table);
        html += giveButtonsTemplate();
        html += '</div>';
        return html;
    };

    return module;
};
},{}]},{},[1]);
